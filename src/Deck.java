import java.io.FileNotFoundException;
import java.util.Random;
import java.util.Stack;

public class Deck {
	
	private Keepers keep;
	private Rules rule;
	private Goals goal;
	private Stack<Card> deckStack;
	
	public Deck() throws FileNotFoundException
	{
		this.deckStack = new Stack<Card>();
		createDeck();
	}

	/**
	 * This function is created to simply swap 2 elements in a given array 
	 * made of Card elements. 
	 * @param array_to_swap
	 * @param position_of_element_1
	 * @param position_of_element_2
	 * @return
	 */
	public Card[] array_2_elements_swapper(Card[] array_to_swap, int position_of_element_1, int position_of_element_2)
	{	
		Card temp;
		
		temp = array_to_swap[position_of_element_1];
		array_to_swap[position_of_element_1] = array_to_swap[position_of_element_2];
		array_to_swap[position_of_element_2] = temp;
		
		return array_to_swap;
	}
	
	/***The shuffle function randomizes the order of the given stack's elements
		by copying the contents of our stack into an array then randomizing its elements
		by using the array_2_elements_swapper function combined with Random indexes 
		generated by the Random class instance rand
	***/
	public Stack<Card> shuffle(Stack<Card> _cards)
	{
		Card[] temporary_array = new Card[_cards.size()];
		Stack<Card> result_Stack = new Stack<Card>(); 

		 _cards.copyInto(temporary_array);
		
		for (int i=0; i < _cards.size(); i++)
		{
			//i chose this instead of the random function to avoid importing packages and for simplicity
			//i created a new instance of Random in every iteration for better Randomness
			Random rand = new Random(); 
			int first_random_index =  rand.nextInt(Card.totalCards);
			int second_random_index = rand.nextInt(Card.totalCards);
			temporary_array= array_2_elements_swapper(temporary_array, first_random_index, second_random_index);
		}
		
		for (int i=0; i < _cards.size(); i++) //pushing the shuffled array's cards into the return stack 
		{
			result_Stack.push(temporary_array[i]); 
		}
		
		return result_Stack;
	}
	
	public Stack<Card> createDeck() throws FileNotFoundException
	{
		for(int i = 1 ; i <= Keepers.totalKeepers ; i++)
		{
			this.keep = new Keepers(i);
			this.deckStack.push(keep);
		}
		
		for(int i = 1 ; i <= Rules.totalRules ; i++)
		{
			this.rule = new Rules(i);
			this.deckStack.push(rule);
		}
		
		for(int i = 1 ; i <= Goals.totalGoals ; i++)
		{
			this.goal = new Goals(i);
			this.deckStack.push(goal);
		}
		//System.err.println("Deck Created Successfully!");
		
		this.deckStack= shuffle(this.deckStack);
		//System.err.println("Deck Shuffled Successfully!");
		
		return this.deckStack;
	}
	
	public Stack<Card> getDeckStack() { return this.deckStack; }
}
